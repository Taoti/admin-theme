.form-element {
  border: 1px solid #8E929C;
  box-sizing: border-box;
  box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.15);
  border-radius: 4px;
}

.form-textarea-wrapper {
  box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.15);
  border-radius: 4px;
}

.cke.cke_chrome.cke_focus {
  box-shadow: 0 0 0 2px #fff, 0 0 0 5px #26a769;
}

.cke.cke_chrome.cke_focus, .cke.cke_focus .cke_contents, .cke.cke_focus .cke_top, .cke.cke_focus .cke_bottom, .error + .cke.cke_chrome.cke_focus, .error + .cke.cke_focus .cke_contents, .error + .cke.cke_focus .cke_top, .error + .cke.cke_focus .cke_bottom {
  border-color: #222330;
}

.form-element--type-select--small {
  padding: calc(0.5rem - 1px) calc(2.25rem - 1px) calc(0.5rem - 1px) calc(1rem - 1px);
  font-size: 0.79rem;
  min-height: 32px;
  line-height: 1rem;
}

:not(.form-checkboxes):not(td) > .form-type--checkbox {
  margin-left: 0;

  .checkbox-toggle {
    z-index: 0;
    display: inline-block;
    vertical-align: top;
    width: 40px;
    height: 24px;
    margin-right: -40px;
    background-color: #909090;
    border-radius: 12px;
    box-sizing: border-box;

    &__inner {
      position: relative;
      display: block;
      width: 100%;
      height: 100%;
      overflow: hidden;
      border: 4px solid transparent;
      border-radius: 12px;
      box-sizing: border-box;

      &:before {
        position: absolute;
        content: "";
        width: 100%;
        height: 100%;
        background-color: #fff;
        border-radius: 21px;
        transform: translateX(-16px);
        transition: .3s;
      }
    }
  }

  input {
    @extend .visually-hidden;
    @extend .focusable;

    &:hover,
    &:focus,
    &:active,
    &:hover:focus,
    &:active:focus {
      outline: none;
      box-shadow: none;
      border: none;
    }

    &:checked ~ .checkbox-toggle .checkbox-toggle__inner {
      background-color: #26a769; //var(--colorGinPrimary);

      &:before {
        transform: translateX(16px);
      }
    }

    &:active ~ .checkbox-toggle .checkbox-toggle__inner,
    &:focus ~ .checkbox-toggle .checkbox-toggle__inner {
      box-shadow: 0 0 0 2px #fff, 0 0 0 5px #26a769;
    }
  }

  label {
    z-index: 1;
    position: relative;
    padding-left: 44px;
    padding-bottom: 0;
  }
}

.button,
.button:not(:focus),
.form-actionsÂ .button {
  box-shadow: 0px 1px 2px rgba(0, 0, 0, .4);
  // box-shadow: 2px 8px 16px rgba(0,0,0,.15);
  border-radius: 4px;
}

.button--primary,
.button--primary:not(:focus) {
  box-shadow: 0px 1px 2px rgba(0, 0, 0, .3);
  // box-shadow: 2px 8px 16px rgba(0,0,0,.25);
}

a.button.button--danger {
  &:hover,
  &:active {
    &:before {
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16' fill='%23ffffff'%3E%3Cpath d='m14.89965 2.9c-.1-.4-.2-.6-.2-.6-.1-.4-.4-.4-.8-.5l-2.3-.3c-.3 0-.3 0-.4-.3-.4-.7-.5-1.2-.9-1.2h-4.6c-.4 0-.5.5-.9 1.3-.1.2-.1.2-.4.3l-2.3.3c-.4 0-.7.1-.8.4 0 0-.1.2-.2.5-.1.6-.2.5.3.5h13.2c.5 0 .4.1.3-.4zm-1.5 1.8h-10.8c-.7 0-.8.1-.7.6l.8 10.1c.1.5.1.6.8.6h9.1c.6 0 .7-.1.8-.6l.8-10.1c0-.5-.1-.6-.8-.6z'/%3E%3C/svg%3E");
    }
  }
}
